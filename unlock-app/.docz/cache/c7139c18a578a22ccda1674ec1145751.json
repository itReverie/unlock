{"remainingRequest":"/Users/brenda/GitRepos/unlock/unlock-app/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/brenda/GitRepos/unlock/unlock-app/node_modules/docz-core/node_modules/babel-preset-react-app/index.js\",{\"flow\":true}]],\"plugins\":[\"/Users/brenda/GitRepos/unlock/unlock-app/node_modules/react-hot-loader/babel.js\",[\"/Users/brenda/GitRepos/unlock/unlock-app/node_modules/docz-core/node_modules/babel-plugin-react-docgen/lib/index.js\",{\"resolver\":\"findAllExportedComponentDefinitions\"}]],\"cacheDirectory\":true,\"babelrc\":false}!/Users/brenda/GitRepos/unlock/unlock-app/src/components/interface/icons/Infinity.js","dependencies":[{"path":"/Users/brenda/GitRepos/unlock/unlock-app/src/components/interface/icons/Infinity.js","mtime":1537654292502},{"path":"/Users/brenda/GitRepos/unlock/unlock-app/node_modules/cache-loader/dist/cjs.js","mtime":1537720221577},{"path":"/Users/brenda/GitRepos/unlock/unlock-app/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/brenda/GitRepos/unlock/unlock-app/src/components/interface/icons/Infinity.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\n\nvar Infinity = function Infinity(props) {\n  return React.createElement(\"svg\", Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  }), React.createElement(\"text\", {\n    fill: \"#333\",\n    fillRule: \"evenodd\",\n    fontFamily: \"IBMPlexMono-Light, IBM Plex Mono Light\",\n    fontSize: 16,\n    letterSpacing: -3.2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, React.createElement(\"tspan\", {\n    x: 0.044,\n    y: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"o\"), React.createElement(\"tspan\", {\n    x: 6.444,\n    y: 10,\n    letterSpacing: -0.044,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"o\")));\n};\n\nvar _default = Infinity;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Infinity, \"Infinity\", \"/Users/brenda/GitRepos/unlock/unlock-app/src/components/interface/icons/Infinity.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/brenda/GitRepos/unlock/unlock-app/src/components/interface/icons/Infinity.js\");\n  leaveModule(module);\n})();\n\n;\nInfinity.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Infinity\"\n};",{"version":3,"sources":["/Users/brenda/GitRepos/unlock/unlock-app/src/components/interface/icons/Infinity.js"],"names":["React","Infinity","props"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SACpB,6CAASA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,QAAQ,EAAC,SAFX;AAGE,IAAA,UAAU,EAAC,wCAHb;AAIE,IAAA,QAAQ,EAAE,EAJZ;AAKE,IAAA,aAAa,EAAE,CAAC,GALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAO,IAAA,CAAC,EAAE,KAAV;AAAiB,IAAA,CAAC,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAPF,EAUE;AAAO,IAAA,CAAC,EAAE,KAAV;AAAiB,IAAA,CAAC,EAAE,EAApB;AAAwB,IAAA,aAAa,EAAE,CAAC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAVF,CADF,CADoB;AAAA,CAAtB;;eAmBeD,Q;AAAf;;;;;;;;;;;;0BAnBMA,Q","sourcesContent":["import React from 'react'\n\nconst Infinity = props => (\n  <svg {...props}>\n    <text\n      fill=\"#333\"\n      fillRule=\"evenodd\"\n      fontFamily=\"IBMPlexMono-Light, IBM Plex Mono Light\"\n      fontSize={16}\n      letterSpacing={-3.2}\n    >\n      <tspan x={0.044} y={10}>\n        o\n      </tspan>\n      <tspan x={6.444} y={10} letterSpacing={-0.044}>\n        o\n      </tspan>\n    </text>\n  </svg>\n)\n\nexport default Infinity\n"]}]}