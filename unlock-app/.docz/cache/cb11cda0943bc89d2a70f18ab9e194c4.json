{"remainingRequest":"/Users/brenda/GitRepos/unlock/unlock-app/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/brenda/GitRepos/unlock/unlock-app/node_modules/docz-core/node_modules/babel-preset-react-app/index.js\",{\"flow\":true}]],\"plugins\":[\"/Users/brenda/GitRepos/unlock/unlock-app/node_modules/react-hot-loader/babel.js\",[\"/Users/brenda/GitRepos/unlock/unlock-app/node_modules/docz-core/node_modules/babel-plugin-react-docgen/lib/index.js\",{\"resolver\":\"findAllExportedComponentDefinitions\"}]],\"cacheDirectory\":true,\"babelrc\":false}!/Users/brenda/GitRepos/unlock/unlock-app/src/components/lock/Icon.js","dependencies":[{"path":"/Users/brenda/GitRepos/unlock/unlock-app/src/components/lock/Icon.js","mtime":1537654292509},{"path":"/Users/brenda/GitRepos/unlock/unlock-app/node_modules/cache-loader/dist/cjs.js","mtime":1537720221577},{"path":"/Users/brenda/GitRepos/unlock/unlock-app/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/brenda/GitRepos/unlock/unlock-app/src/components/lock/Icon.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ColorScheme from 'color-scheme';\nimport UnlockPropTypes from '../../propTypes';\n/**\n * This generates a lock icon unique for each lock\n * At this point, it only changes the colors of the 3 inner circles based on the lock address\n * @todo Customize position of circles\n * @body In order to get more unique lock icons we should also position (x, y and z) the inner circles\n * more uniquely based on the lock address... the challenge is to not have any white space.\n * @param {UnlockPropTypes.address} address\n */\n\nexport function Icon(_ref) {\n  var address = _ref.address;\n  var mainColor = address.substring(2, 8).toUpperCase();\n  var scheme = new ColorScheme();\n  scheme.from_hex(mainColor).scheme('triade').variation('light');\n  var colors = scheme.colors().map(function (c) {\n    return \"#\".concat(c);\n  });\n  return React.createElement(\"svg\", {\n    viewBox: \"0 0 216 216\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: \"100%\",\n    height: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"defs\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"circle\", {\n    id: \"a\",\n    cx: 108,\n    cy: 108,\n    r: 108,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"circle\", {\n    id: \"c\",\n    cx: 108,\n    cy: 108,\n    r: 60.75,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), React.createElement(\"g\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"mask\", {\n    id: \"b\",\n    fill: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"use\", {\n    xlinkHref: \"#a\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(\"circle\", {\n    fill: colors[0],\n    mask: \"url(#b)\",\n    cx: 195.75,\n    cy: 114.75,\n    r: 114.75,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"circle\", {\n    fill: colors[1],\n    mask: \"url(#b)\",\n    cx: 33.75,\n    cy: 162,\n    r: 114.75,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"circle\", {\n    fill: colors[2],\n    mask: \"url(#b)\",\n    cx: 121.5,\n    r: 114.75,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"mask\", {\n    id: \"d\",\n    fill: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"use\", {\n    xlinkHref: \"#c\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"use\", {\n    fill: \"#FFF\",\n    xlinkHref: \"#c\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"path\", {\n    d: \"M121.179 116.422c-.001.895-.05 1.797-.168 2.683-1.047 7.845-9.512 12.951-17.006 10.275-5.482-1.958-8.917-6.786-8.921-12.582-.003-3.972-.003-7.944-.003-11.916h26.103c-.001 3.847-.002 7.694-.005 11.54m16.198-34.477V81h-16.335v16.198H94.936l.001-15.26v-.918h-16.28c-.014.196-.035.34-.035.483.001 5.232-.012 10.463-.019 15.695H74.25v7.694h4.353c.004 4.167.015 8.334.05 12.5.07 8.231 3.508 15.052 9.88 20.2 9.188 7.422 19.562 9 30.636 4.94 10.486-3.846 18.35-13.87 18.231-26.081-.037-3.853-.05-7.706-.054-11.559h4.404v-7.694h-4.4c.01-5.085.027-10.17.027-15.253\",\n    fill: colors[0],\n    mask: \"url(#d)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })));\n}\nIcon.propTypes = {\n  address: UnlockPropTypes.address,\n  size: PropTypes.string\n};\nvar _default = Icon;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Icon, \"Icon\", \"/Users/brenda/GitRepos/unlock/unlock-app/src/components/lock/Icon.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/brenda/GitRepos/unlock/unlock-app/src/components/lock/Icon.js\");\n  leaveModule(module);\n})();\n\n;\nIcon.__docgenInfo = {\n  \"description\": \"This generates a lock icon unique for each lock\\nAt this point, it only changes the colors of the 3 inner circles based on the lock address\\n@todo Customize position of circles\\n@body In order to get more unique lock icons we should also position (x, y and z) the inner circles\\nmore uniquely based on the lock address... the challenge is to not have any white space.\\n@param {UnlockPropTypes.address} address\",\n  \"methods\": [],\n  \"displayName\": \"Icon\",\n  \"props\": {\n    \"address\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"UnlockPropTypes.address\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"size\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/brenda/GitRepos/unlock/unlock-app/src/components/lock/Icon.js"],"names":["PropTypes","React","ColorScheme","UnlockPropTypes","Icon","address","mainColor","substring","toUpperCase","scheme","from_hex","variation","colors","map","c","propTypes","size","string"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport ColorScheme from 'color-scheme'\n\nimport UnlockPropTypes from '../../propTypes'\n\n/**\n * This generates a lock icon unique for each lock\n * At this point, it only changes the colors of the 3 inner circles based on the lock address\n * @todo Customize position of circles\n * @body In order to get more unique lock icons we should also position (x, y and z) the inner circles\n * more uniquely based on the lock address... the challenge is to not have any white space.\n * @param {UnlockPropTypes.address} address\n */\nexport function Icon({ address }) {\n  const mainColor = address.substring(2, 8).toUpperCase()\n  const scheme = new ColorScheme()\n  scheme.from_hex(mainColor)\n    .scheme('triade')\n    .variation('light')\n\n  const colors = scheme.colors().map((c) => `#${c}`)\n\n  return (\n    <svg\n      viewBox=\"0 0 216 216\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      width=\"100%\"\n      height=\"100%\">\n      <defs>\n        <circle id=\"a\" cx={108} cy={108} r={108} />\n        <circle id=\"c\" cx={108} cy={108} r={60.75} />\n      </defs>\n      <g>\n        <mask id=\"b\" fill=\"#fff\">\n          <use xlinkHref=\"#a\" />\n        </mask>\n        <circle fill={colors[0]} mask=\"url(#b)\" cx={195.75} cy={114.75} r={114.75} />\n        <circle fill={colors[1]} mask=\"url(#b)\" cx={33.75} cy={162} r={114.75} />\n        <circle fill={colors[2]} mask=\"url(#b)\" cx={121.5} r={114.75} />\n        <mask id=\"d\" fill=\"#fff\">\n          <use xlinkHref=\"#c\" />\n        </mask>\n        <use fill=\"#FFF\" xlinkHref=\"#c\" />\n        <path\n          d=\"M121.179 116.422c-.001.895-.05 1.797-.168 2.683-1.047 7.845-9.512 12.951-17.006 10.275-5.482-1.958-8.917-6.786-8.921-12.582-.003-3.972-.003-7.944-.003-11.916h26.103c-.001 3.847-.002 7.694-.005 11.54m16.198-34.477V81h-16.335v16.198H94.936l.001-15.26v-.918h-16.28c-.014.196-.035.34-.035.483.001 5.232-.012 10.463-.019 15.695H74.25v7.694h4.353c.004 4.167.015 8.334.05 12.5.07 8.231 3.508 15.052 9.88 20.2 9.188 7.422 19.562 9 30.636 4.94 10.486-3.846 18.35-13.87 18.231-26.081-.037-3.853-.05-7.706-.054-11.559h4.404v-7.694h-4.4c.01-5.085.027-10.17.027-15.253\"\n          fill={colors[0]}\n          mask=\"url(#d)\"\n        />\n      </g>\n    </svg>\n  )\n}\n\nIcon.propTypes = {\n  address: UnlockPropTypes.address,\n  size: PropTypes.string,\n}\nexport default Icon\n"]}]}