{"remainingRequest":"/Users/brenda/GitRepos/unlock/unlock-app/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/brenda/GitRepos/unlock/unlock-app/node_modules/docz-core/node_modules/babel-preset-react-app/index.js\",{\"flow\":true}]],\"plugins\":[\"/Users/brenda/GitRepos/unlock/unlock-app/node_modules/react-hot-loader/babel.js\",[\"/Users/brenda/GitRepos/unlock/unlock-app/node_modules/docz-core/node_modules/babel-plugin-react-docgen/lib/index.js\",{\"resolver\":\"findAllExportedComponentDefinitions\"}]],\"cacheDirectory\":true,\"babelrc\":false}!/Users/brenda/GitRepos/unlock/unlock-app/src/components/helpers/Balance.js","dependencies":[{"path":"/Users/brenda/GitRepos/unlock/unlock-app/src/components/helpers/Balance.js","mtime":1537654292489},{"path":"/Users/brenda/GitRepos/unlock/unlock-app/node_modules/cache-loader/dist/cjs.js","mtime":1537720221577},{"path":"/Users/brenda/GitRepos/unlock/unlock-app/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/brenda/GitRepos/unlock/unlock-app/src/components/helpers/Balance.js\";\n\nvar _templateObject = /*#__PURE__*/ _taggedTemplateLiteral([\"\\n  display: grid;\\n  align-content: stretch;\\n  grid-auto-flow: column;\\n\"]),\n    _templateObject2 = /*#__PURE__*/ _taggedTemplateLiteral([\"\"]),\n    _templateObject3 = /*#__PURE__*/ _taggedTemplateLiteral([\"\\n  display: grid;\\n  align-items: end;\\n  justify-items: end;\\n\"]);\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport styled from 'styled-components';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Web3Utils from 'web3-utils';\nimport Icons from '../interface/icons';\n/**\n * Component which shows a balance in Eth\n * @param {*} amount: the amount to convert to Eth\n * @param {string} unit: the unit of the amount to convert to Eth\n */\n\nexport function Balance(_ref) {\n  var amount = _ref.amount,\n      _ref$unit = _ref.unit,\n      unit = _ref$unit === void 0 ? 'wei' : _ref$unit;\n  var inWei = Web3Utils.toWei(amount || '0', unit);\n  var inEth = Web3Utils.fromWei(inWei, 'ether');\n  return React.createElement(BalanceWithUnit, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Unit, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Icons.Eth, {\n    width: \"1em\",\n    height: \"1em\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })), React.createElement(Amount, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, inEth));\n}\nBalance.propTypes = {\n  amount: PropTypes.string,\n  unit: PropTypes.string,\n  symbol: PropTypes.bool\n};\nvar BalanceWithUnit = styled.div(_templateObject);\nvar Amount = styled.span(_templateObject2);\nvar Unit = styled.span(_templateObject3);\nvar _default = Balance;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Balance, \"Balance\", \"/Users/brenda/GitRepos/unlock/unlock-app/src/components/helpers/Balance.js\");\n  reactHotLoader.register(BalanceWithUnit, \"BalanceWithUnit\", \"/Users/brenda/GitRepos/unlock/unlock-app/src/components/helpers/Balance.js\");\n  reactHotLoader.register(Amount, \"Amount\", \"/Users/brenda/GitRepos/unlock/unlock-app/src/components/helpers/Balance.js\");\n  reactHotLoader.register(Unit, \"Unit\", \"/Users/brenda/GitRepos/unlock/unlock-app/src/components/helpers/Balance.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/brenda/GitRepos/unlock/unlock-app/src/components/helpers/Balance.js\");\n  leaveModule(module);\n})();\n\n;\nBalance.__docgenInfo = {\n  \"description\": \"Component which shows a balance in Eth\\n@param {*} amount: the amount to convert to Eth\\n@param {string} unit: the unit of the amount to convert to Eth\",\n  \"methods\": [],\n  \"displayName\": \"Balance\",\n  \"props\": {\n    \"unit\": {\n      \"defaultValue\": {\n        \"value\": \"'wei'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"amount\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"symbol\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/brenda/GitRepos/unlock/unlock-app/src/components/helpers/Balance.js"],"names":["styled","React","PropTypes","Web3Utils","Icons","Balance","amount","unit","inWei","toWei","inEth","fromWei","propTypes","string","symbol","bool","BalanceWithUnit","div","Amount","span","Unit"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA;;;;;;AAKA,OAAO,SAASC,OAAT,OAA2C;AAAA,MAAxBC,MAAwB,QAAxBA,MAAwB;AAAA,uBAAhBC,IAAgB;AAAA,MAAhBA,IAAgB,0BAAT,KAAS;AAChD,MAAIC,KAAK,GAAGL,SAAS,CAACM,KAAV,CAAgBH,MAAM,IAAI,GAA1B,EAA+BC,IAA/B,CAAZ;AACA,MAAIG,KAAK,GAAGP,SAAS,CAACQ,OAAV,CAAkBH,KAAlB,EAAyB,OAAzB,CAAZ;AACA,SAAQ,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACN,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,GAAP;AAAW,IAAA,KAAK,EAAC,KAAjB;AAAuB,IAAA,MAAM,EAAC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADM,EAIN,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASE,KAAT,CAJM,CAAR;AAMD;AAEDL,OAAO,CAACO,SAAR,GAAoB;AAClBN,EAAAA,MAAM,EAAEJ,SAAS,CAACW,MADA;AAElBN,EAAAA,IAAI,EAAEL,SAAS,CAACW,MAFE;AAGlBC,EAAAA,MAAM,EAAEZ,SAAS,CAACa;AAHA,CAApB;AAMA,IAAMC,eAAe,GAAGhB,MAAM,CAACiB,GAAV,iBAArB;AAMA,IAAMC,MAAM,GAAGlB,MAAM,CAACmB,IAAV,kBAAZ;AAEA,IAAMC,IAAI,GAAGpB,MAAM,CAACmB,IAAV,kBAAV;eAMed,O;AAAf;;;;;;;;;;;;0BA/BgBA,O;0BAiBVW,e;0BAMAE,M;0BAEAE,I","sourcesContent":["import styled from 'styled-components'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Web3Utils from 'web3-utils'\nimport Icons from '../interface/icons'\n\n/**\n * Component which shows a balance in Eth\n * @param {*} amount: the amount to convert to Eth\n * @param {string} unit: the unit of the amount to convert to Eth\n */\nexport function Balance({ amount, unit = 'wei' }) {\n  let inWei = Web3Utils.toWei(amount || '0', unit)\n  let inEth = Web3Utils.fromWei(inWei, 'ether')\n  return (<BalanceWithUnit>\n    <Unit>\n      <Icons.Eth width=\"1em\" height=\"1em\" />\n    </Unit>\n    <Amount>{inEth}</Amount>\n  </BalanceWithUnit>)\n}\n\nBalance.propTypes = {\n  amount: PropTypes.string,\n  unit: PropTypes.string,\n  symbol: PropTypes.bool,\n}\n\nconst BalanceWithUnit = styled.div`\n  display: grid;\n  align-content: stretch;\n  grid-auto-flow: column;\n`\n\nconst Amount = styled.span``\n\nconst Unit = styled.span`\n  display: grid;\n  align-items: end;\n  justify-items: end;\n`\n\nexport default Balance\n"]}]}