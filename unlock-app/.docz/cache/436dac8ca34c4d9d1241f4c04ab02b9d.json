{"remainingRequest":"/Users/brenda/GitRepos/unlock/unlock-app/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/brenda/GitRepos/unlock/unlock-app/node_modules/docz-core/node_modules/babel-preset-react-app/index.js\",{\"flow\":true}]],\"plugins\":[[\"/Users/brenda/GitRepos/unlock/unlock-app/node_modules/docz-core/node_modules/babel-plugin-react-docgen/lib/index.js\",{\"resolver\":\"findAllExportedComponentDefinitions\"}]],\"cacheDirectory\":true,\"babelrc\":false}!/Users/brenda/GitRepos/unlock/unlock-app/src/components/Account.js","dependencies":[{"path":"/Users/brenda/GitRepos/unlock/unlock-app/src/components/Account.js","mtime":1537654292477},{"path":"/Users/brenda/GitRepos/unlock/unlock-app/node_modules/cache-loader/dist/cjs.js","mtime":1537720221577},{"path":"/Users/brenda/GitRepos/unlock/unlock-app/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import UnlockPropTypes from '../propTypes';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Balance from './helpers/Balance';\nexport function Account(_ref) {\n  var account = _ref.account,\n      showAccountPicker = _ref.showAccountPicker;\n  return React.createElement(\"div\", {\n    className: \"container\"\n  }, React.createElement(\"div\", {\n    className: \"row align-items-center\"\n  }, React.createElement(\"span\", {\n    className: \"col-6 text-truncate\"\n  }, account.address), React.createElement(\"span\", {\n    className: \"col text-muted text-right text-truncate\"\n  }, React.createElement(Balance, {\n    amount: account.balance\n  })), React.createElement(\"span\", {\n    className: \"col-2\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-small btn-outline-secondary js-accountSwitch\",\n    onClick: function onClick(event) {\n      return showAccountPicker();\n    },\n    type: \"button\"\n  }, \"Switch\"))));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    account: state.network.account\n  };\n};\n\nexport default connect(mapStateToProps)(Account);\nAccount.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Account\",\n  \"props\": {\n    \"account\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"UnlockPropTypes.account\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"showAccountPicker\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/brenda/GitRepos/unlock/unlock-app/src/components/Account.js"],"names":["UnlockPropTypes","React","connect","Balance","Account","account","showAccountPicker","address","balance","event","mapStateToProps","state","network"],"mappings":"AACA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,OAAO,SAASC,OAAT,OAAiD;AAAA,MAA9BC,OAA8B,QAA9BA,OAA8B;AAAA,MAArBC,iBAAqB,QAArBA,iBAAqB;AACtD,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAuCD,OAAO,CAACE,OAA/C,CADF,EAEE;AAAM,IAAA,SAAS,EAAC;AAAhB,KAA0D,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAEF,OAAO,CAACG;AAAzB,IAA1D,CAFF,EAGE;AAAM,IAAA,SAAS,EAAC;AAAhB,KACE;AAAQ,IAAA,SAAS,EAAC,sDAAlB;AAAyE,IAAA,OAAO,EAAE,iBAACC,KAAD;AAAA,aAAWH,iBAAiB,EAA5B;AAAA,KAAlF;AAAkH,IAAA,IAAI,EAAC;AAAvH,cADF,CAHF,CADF,CADF;AAWD;;AAOD,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLN,IAAAA,OAAO,EAAEM,KAAK,CAACC,OAAN,CAAcP;AADlB,GAAP;AAGD,CAJD;;AAMA,eAAeH,OAAO,CAACQ,eAAD,CAAP,CAAyBN,OAAzB,CAAf","sourcesContent":["import PropTypes from 'prop-types'\nimport UnlockPropTypes from '../propTypes'\n\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport Balance from './helpers/Balance'\n\nexport function Account({ account, showAccountPicker }) {\n  return (\n    <div className=\"container\">\n      <div className=\"row align-items-center\">\n        <span className=\"col-6 text-truncate\">{account.address}</span>\n        <span className=\"col text-muted text-right text-truncate\"><Balance amount={account.balance} /></span>\n        <span className=\"col-2\">\n          <button className=\"btn btn-small btn-outline-secondary js-accountSwitch\" onClick={(event) => showAccountPicker()} type=\"button\">Switch</button>\n        </span>\n      </div>\n    </div>\n  )\n}\n\nAccount.propTypes = {\n  account: UnlockPropTypes.account,\n  showAccountPicker: PropTypes.func,\n}\n\nconst mapStateToProps = state => {\n  return {\n    account: state.network.account,\n  }\n}\n\nexport default connect(mapStateToProps)(Account)\n"]}]}